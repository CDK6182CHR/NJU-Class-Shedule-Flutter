import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';

// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
class S implements WidgetsLocalizations {
  const S();

  static S current;

  static const GeneratedLocalizationsDelegate delegate =
    GeneratedLocalizationsDelegate();

  static S of(BuildContext context) => Localizations.of<S>(context, S);

  @override
  TextDirection get textDirection => TextDirection.ltr;

  String get QQ_copy_success_toast => "已复制群号到剪贴板";
  String get QQ_open_fail_toast => "打开失败，可能是未安装 TIM/QQ";
  String get about_title => "关于";
  String get add_backgound_picture_subtitle => "上传背景图片";
  String get add_backgound_picture_success_toast => "更换背景图片成功ww";
  String get add_backgound_picture_title => "上传背景图片";
  String get add_class => "添加课程";
  String get add_class_table_dialog_title => "请输入课程表名称";
  String get add_manually_success_toast => "添加成功！>v<";
  String get add_manually_title => "添加课程";
  String get alipay_open_fail_toast => "打开失败，可能是未安装支付宝";
  String get app_name => "南哪课表";
  String get at => "@";
  String get bug_and_report => "似乎有bug，我要反馈";
  String get cancel => "取消";
  String get captcha => "验证码";
  String get captcha_error_toast => "验证码错误 > <";
  String get change_theme_title => "修改主题";
  String get change_week_subtitle => "当前周数：";
  String get change_week_title => "修改当前周";
  String get choose_class_time_dialog_title => "选择上课时间";
  String get class_name => "课程名称";
  String get class_name_empty => "请输入课程名称";
  String get class_num_invalid_dialog_content => "课程结束节数应大于起始节数";
  String get class_num_invalid_dialog_title => "课程节数不合法";
  String get class_parse_error_toast => "课程解析失败 = =|| 可将课表反馈至翠翠";
  String get class_parse_toast_fail => "出现异常，建议提交反馈";
  String get class_parse_toast_success => "数据存储成功 >v<";
  String get class_room => "上课地点";
  String get class_table_manage_title => "课表管理";
  String get class_teacher => "上课老师";
  String get delete_backgound_picture_subtitle => "恢复默认白色背景";
  String get delete_backgound_picture_success_toast => "已恢复默认背景ww";
  String get delete_backgound_picture_title => "清除背景图片";
  String get delete_class_dialog_title => "删除课程";
  String get developer => "开发者 idealclover";
  String get donate_subtitle => "给傻翠买支棒棒糖吧！";
  String get donate_title => "投喂";
  String get easter_egg => "感谢小百合工作室\n感谢 @ns @lgt 协助开发\n感谢 @ovoclover 制作图标\n感谢 @无忌 @子枨 提供配色方案\n特别感谢 1A335 三位室友的支持\n感谢各位提供反馈的 NJUers\n谨以此 APP 敬我的大学时光\n对了 如果那个人能看到的话 谢谢 祝幸福";
  String get flutter_lts => "(Flutter LTS)";
  String get force_zoom_subtitle => "强制缩放课程表为一页";
  String get force_zoom_title => "强制缩放";
  String get github_open_source => "GitHub 开源";
  String get if_show_classtime_subtitle => "设置是否显示课程时间";
  String get if_show_classtime_title => "显示课程时间";
  String get if_show_weekend_subtitle => "设置是否显示周六周日";
  String get if_show_weekend_title => "显示周末";
  String get import => "导入";
  String get import_auto => "自动导入";
  String get import_from_NJU_subtitle => "登录南京大学教务系统导入课程表";
  String get import_from_NJU_title => "导入南京大学课表";
  String get import_manually => "手动导入";
  String get import_manually_subtitle => "手动添加课程表数据";
  String get import_manually_title => "手动添加";
  String get import_title => "导入课程表";
  String get introduction => "博客：https://idealclover.top\nEmail：idealclover@163.com";
  String get love_and_donate => "完美导入！投喂傻翠w";
  String get love_but_no_money => "感谢制作，但我没钱";
  String get manage_table_subtitle => "添加或删除课表数据";
  String get manage_table_title => "课表管理";
  String get more_settings_title => "自定义选项";
  String get not_this_week => "[非本周]";
  String get nowweek_edited_success_toast => "修改当前周成功 >v<";
  String get nowweek_not_edited_success_toast => "当前周未修改 >v<";
  String get ok => "确认";
  String get open_source_library_content => "shared_preferences: ^0.5.3+4\npackage_info: ^0.4.0+6\nflutter_bugly: ^0.2.6\nurl_launcher: ^5.1.2\nscoped_model: ^1.0.1\nfluttertoast: ^3.1.3\nsqflite: ^1.1.6\nintl: ^0.16.0";
  String get open_source_library_title => "所使用到的开源库";
  String get password => "密码";
  String get password_error_toast => "密码错误 = =||";
  String get remember_password => "记住密码";
  String get report_subtitle => "加入用户群一起愉快地玩耍吧！\n轻触直接加群，长按复制群号";
  String get report_title => "反馈";
  String get settings_title => "设置";
  String get shuffle_color_pool_subtitle => "重置课程颜色池";
  String get shuffle_color_pool_success_toast => "重置颜色池成功 >v<";
  String get shuffle_color_pool_title => "重置课程颜色";
  String get tap_to_refresh => "点击刷新";
  String get to => "-";
  String get unknown_place => "未知地点";
  String get username => "用户名";
  String get username_error_toast => "用户名错误 TvT";
  String get week_num_invalid_dialog_content => "课程结束周数应大于起始周数";
  String get week_num_invalid_dialog_title => "课程周数不合法";
  String get welcome_content => "Hi！我是项目作者傻翠～\n\n看起来你已经导入我南教务处成功啦！撒花撒花！\n\n建议大家还是和自己教务系统中的课表对一下～避免出现什么bug～如果有bug的话欢迎反馈给我！设置-反馈中有交流群的群号～\n\n坦率地讲，从安卓移植到全平台是一个痛苦的过程。之前的APP多少是建立在开源项目的基础上，而这个重构项目算是自己从零开始搭起来的。其中也做了不少取舍与妥协，还有可能出现之前所没有过的bug。这都是我所会预料到的，如果你不巧遇到了bug，也欢迎向我反馈。\n\n写这个项目是一个吃力不讨好的事。单是苹果的开发者账号就要688/年，更不用提为了开发iOS版而单独买的macbook。所以如果小伙伴想让这个项目持续下去的话，欢迎投喂傻翠。\n\n其实我大四已经没课了，也早不需要课表这种东西了，可能你们的支持是我继续下去的唯一动力吧ww\n\n放心，这个弹框每次导入只会弹出一次，所以不会影响你的正常使用。\n\n希望南哪课表可以陪伴学弟学妹们走过每一学期ww\n\n傻翠 2019.09.14";
  String get welcome_title => "欢迎使用南哪课表！";
  String class_duration(String start, String end) => "第 $start - $end 节";
  String class_single(String num) => "第 $num 节";
  String delete_class_dialog_content(String className) => "确定删除课程【 $className 】吗？";
  String week(String num) => "第 $num 周";
}

class $en extends S {
  const $en();
}

class $zh_CN extends S {
  const $zh_CN();

  @override
  TextDirection get textDirection => TextDirection.ltr;

  @override
  String get cancel => "取消";
  @override
  String get report_subtitle => "加入用户群一起愉快地玩耍吧！\n轻触直接加群，长按复制群号";
  @override
  String get if_show_classtime_title => "显示课程时间";
  @override
  String get settings_title => "设置";
  @override
  String get delete_class_dialog_title => "删除课程";
  @override
  String get import_auto => "自动导入";
  @override
  String get delete_backgound_picture_title => "清除背景图片";
  @override
  String get donate_title => "投喂";
  @override
  String get nowweek_edited_success_toast => "修改当前周成功 >v<";
  @override
  String get password => "密码";
  @override
  String get username_error_toast => "用户名错误 TvT";
  @override
  String get change_week_subtitle => "当前周数：";
  @override
  String get captcha => "验证码";
  @override
  String get import_manually => "手动导入";
  @override
  String get class_num_invalid_dialog_content => "课程结束节数应大于起始节数";
  @override
  String get open_source_library_content => "shared_preferences: ^0.5.3+4\npackage_info: ^0.4.0+6\nflutter_bugly: ^0.2.6\nurl_launcher: ^5.1.2\nscoped_model: ^1.0.1\nfluttertoast: ^3.1.3\nsqflite: ^1.1.6\nintl: ^0.16.0";
  @override
  String get manage_table_title => "课表管理";
  @override
  String get easter_egg => "感谢小百合工作室\n感谢 @ns @lgt 协助开发\n感谢 @ovoclover 制作图标\n感谢 @无忌 @子枨 提供配色方案\n特别感谢 1A335 三位室友的支持\n感谢各位提供反馈的 NJUers\n谨以此 APP 敬我的大学时光\n对了 如果那个人能看到的话 谢谢 祝幸福";
  @override
  String get class_parse_error_toast => "课程解析失败 = =|| 可将课表反馈至翠翠";
  @override
  String get delete_backgound_picture_subtitle => "恢复默认白色背景";
  @override
  String get shuffle_color_pool_subtitle => "重置课程颜色池";
  @override
  String get alipay_open_fail_toast => "打开失败，可能是未安装支付宝";
  @override
  String get add_backgound_picture_title => "上传背景图片";
  @override
  String get if_show_weekend_subtitle => "设置是否显示周六周日";
  @override
  String get add_class_table_dialog_title => "请输入课程表名称";
  @override
  String get love_but_no_money => "感谢制作，但我没钱";
  @override
  String get welcome_content => "Hi！我是项目作者傻翠～\n\n看起来你已经导入我南教务处成功啦！撒花撒花！\n\n建议大家还是和自己教务系统中的课表对一下～避免出现什么bug～如果有bug的话欢迎反馈给我！设置-反馈中有交流群的群号～\n\n坦率地讲，从安卓移植到全平台是一个痛苦的过程。之前的APP多少是建立在开源项目的基础上，而这个重构项目算是自己从零开始搭起来的。其中也做了不少取舍与妥协，还有可能出现之前所没有过的bug。这都是我所会预料到的，如果你不巧遇到了bug，也欢迎向我反馈。\n\n写这个项目是一个吃力不讨好的事。单是苹果的开发者账号就要688/年，更不用提为了开发iOS版而单独买的macbook。所以如果小伙伴想让这个项目持续下去的话，欢迎投喂傻翠。\n\n其实我大四已经没课了，也早不需要课表这种东西了，可能你们的支持是我继续下去的唯一动力吧ww\n\n放心，这个弹框每次导入只会弹出一次，所以不会影响你的正常使用。\n\n希望南哪课表可以陪伴学弟学妹们走过每一学期ww\n\n傻翠 2019.09.14";
  @override
  String get at => "@";
  @override
  String get captcha_error_toast => "验证码错误 > <";
  @override
  String get delete_backgound_picture_success_toast => "已恢复默认背景ww";
  @override
  String get open_source_library_title => "所使用到的开源库";
  @override
  String get import_from_NJU_title => "导入南京大学课表";
  @override
  String get force_zoom_subtitle => "强制缩放课程表为一页";
  @override
  String get if_show_classtime_subtitle => "设置是否显示课程时间";
  @override
  String get class_parse_toast_success => "数据存储成功 >v<";
  @override
  String get flutter_lts => "(Flutter LTS)";
  @override
  String get choose_class_time_dialog_title => "选择上课时间";
  @override
  String get tap_to_refresh => "点击刷新";
  @override
  String get donate_subtitle => "给傻翠买支棒棒糖吧！";
  @override
  String get import => "导入";
  @override
  String get password_error_toast => "密码错误 = =||";
  @override
  String get QQ_open_fail_toast => "打开失败，可能是未安装 TIM/QQ";
  @override
  String get QQ_copy_success_toast => "已复制群号到剪贴板";
  @override
  String get not_this_week => "[非本周]";
  @override
  String get change_week_title => "修改当前周";
  @override
  String get unknown_place => "未知地点";
  @override
  String get bug_and_report => "似乎有bug，我要反馈";
  @override
  String get welcome_title => "欢迎使用南哪课表！";
  @override
  String get remember_password => "记住密码";
  @override
  String get class_table_manage_title => "课表管理";
  @override
  String get github_open_source => "GitHub 开源";
  @override
  String get week_num_invalid_dialog_content => "课程结束周数应大于起始周数";
  @override
  String get add_class => "添加课程";
  @override
  String get add_backgound_picture_success_toast => "更换背景图片成功ww";
  @override
  String get shuffle_color_pool_title => "重置课程颜色";
  @override
  String get week_num_invalid_dialog_title => "课程周数不合法";
  @override
  String get nowweek_not_edited_success_toast => "当前周未修改 >v<";
  @override
  String get class_teacher => "上课老师";
  @override
  String get class_name_empty => "请输入课程名称";
  @override
  String get ok => "确认";
  @override
  String get class_name => "课程名称";
  @override
  String get introduction => "博客：https://idealclover.top\nEmail：idealclover@163.com";
  @override
  String get import_from_NJU_subtitle => "登录南京大学教务系统导入课程表";
  @override
  String get report_title => "反馈";
  @override
  String get shuffle_color_pool_success_toast => "重置颜色池成功 >v<";
  @override
  String get add_manually_title => "添加课程";
  @override
  String get change_theme_title => "修改主题";
  @override
  String get force_zoom_title => "强制缩放";
  @override
  String get add_manually_success_toast => "添加成功！>v<";
  @override
  String get import_title => "导入课程表";
  @override
  String get class_parse_toast_fail => "出现异常，建议提交反馈";
  @override
  String get love_and_donate => "完美导入！投喂傻翠w";
  @override
  String get class_num_invalid_dialog_title => "课程节数不合法";
  @override
  String get app_name => "南哪课表";
  @override
  String get import_manually_subtitle => "手动添加课程表数据";
  @override
  String get manage_table_subtitle => "添加或删除课表数据";
  @override
  String get class_room => "上课地点";
  @override
  String get if_show_weekend_title => "显示周末";
  @override
  String get add_backgound_picture_subtitle => "上传背景图片";
  @override
  String get about_title => "关于";
  @override
  String get developer => "开发者 idealclover";
  @override
  String get to => "-";
  @override
  String get import_manually_title => "手动添加";
  @override
  String get more_settings_title => "自定义选项";
  @override
  String get username => "用户名";
  @override
  String delete_class_dialog_content(String className) => "确定删除课程【 $className 】吗？";
  @override
  String week(String num) => "第 $num 周";
  @override
  String class_duration(String start, String end) => "第 $start - $end 节";
  @override
  String class_single(String num) => "第 $num 节";
}

class GeneratedLocalizationsDelegate extends LocalizationsDelegate<S> {
  const GeneratedLocalizationsDelegate();

  List<Locale> get supportedLocales {
    return const <Locale>[
      Locale("en", ""),
      Locale("zh", "CN"),
    ];
  }

  LocaleListResolutionCallback listResolution({Locale fallback, bool withCountry = true}) {
    return (List<Locale> locales, Iterable<Locale> supported) {
      if (locales == null || locales.isEmpty) {
        return fallback ?? supported.first;
      } else {
        return _resolve(locales.first, fallback, supported, withCountry);
      }
    };
  }

  LocaleResolutionCallback resolution({Locale fallback, bool withCountry = true}) {
    return (Locale locale, Iterable<Locale> supported) {
      return _resolve(locale, fallback, supported, withCountry);
    };
  }

  @override
  Future<S> load(Locale locale) {
    final String lang = getLang(locale);
    if (lang != null) {
      switch (lang) {
        case "en":
          S.current = const $en();
          return SynchronousFuture<S>(S.current);
        case "zh_CN":
          S.current = const $zh_CN();
          return SynchronousFuture<S>(S.current);
        default:
          // NO-OP.
      }
    }
    S.current = const S();
    return SynchronousFuture<S>(S.current);
  }

  @override
  bool isSupported(Locale locale) => _isSupported(locale, true);

  @override
  bool shouldReload(GeneratedLocalizationsDelegate old) => false;

  ///
  /// Internal method to resolve a locale from a list of locales.
  ///
  Locale _resolve(Locale locale, Locale fallback, Iterable<Locale> supported, bool withCountry) {
    if (locale == null || !_isSupported(locale, withCountry)) {
      return fallback ?? supported.first;
    }

    final Locale languageLocale = Locale(locale.languageCode, "");
    if (supported.contains(locale)) {
      return locale;
    } else if (supported.contains(languageLocale)) {
      return languageLocale;
    } else {
      final Locale fallbackLocale = fallback ?? supported.first;
      return fallbackLocale;
    }
  }

  ///
  /// Returns true if the specified locale is supported, false otherwise.
  ///
  bool _isSupported(Locale locale, bool withCountry) {
    if (locale != null) {
      for (Locale supportedLocale in supportedLocales) {
        // Language must always match both locales.
        if (supportedLocale.languageCode != locale.languageCode) {
          continue;
        }

        // If country code matches, return this locale.
        if (supportedLocale.countryCode == locale.countryCode) {
          return true;
        }

        // If no country requirement is requested, check if this locale has no country.
        if (true != withCountry && (supportedLocale.countryCode == null || supportedLocale.countryCode.isEmpty)) {
          return true;
        }
      }
    }
    return false;
  }
}

String getLang(Locale l) => l == null
  ? null
  : l.countryCode != null && l.countryCode.isEmpty
    ? l.languageCode
    : l.toString();
